name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master ]

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x android/gradlew
      
    - name: Run Kotlin Linter
      run: |
        cd android
        ./gradlew ktlintCheck || true
        
    - name: Run Unit Tests
      run: |
        cd android
        ./gradlew test
        
    - name: Run Lint Check
      run: |
        cd android
        ./gradlew lint
        
    - name: Build Debug APK
      run: |
        cd android
        ./gradlew assembleDebug
        
    - name: Check APK Size
      run: |
        cd android/app/build/outputs/apk/debug
        APK_SIZE=$(du -h *.apk | cut -f1)
        echo "Debug APK Size: $APK_SIZE"
        
        # Check if APK is under reasonable size (15MB for debug)
        APK_SIZE_BYTES=$(du -b *.apk | cut -f1)
        if [ $APK_SIZE_BYTES -gt 15728640 ]; then
          echo "‚ö†Ô∏è Warning: Debug APK size ($APK_SIZE) exceeds 15MB threshold"
          exit 1
        else
          echo "‚úÖ APK size ($APK_SIZE) is within acceptable limits"
        fi
        
    - name: Comment PR with build info
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Get APK size
          const { execSync } = require('child_process');
          const apkSize = execSync('cd android/app/build/outputs/apk/debug && du -h *.apk | cut -f1', { encoding: 'utf-8' }).trim();
          
          const comment = `## üîç PR Build Check Results
          
          ‚úÖ **Build Status**: Success
          üì¶ **Debug APK Size**: ${apkSize}
          üß™ **Tests**: Passed
          üîç **Lint**: Passed
          
          The APK has been built successfully and is ready for testing.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
          
    - name: Upload PR APK
      uses: actions/upload-artifact@v4
      with:
        name: PR-${{ github.event.number }}-Debug-APK
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 7 